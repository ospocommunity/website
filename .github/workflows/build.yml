# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Build docs

on:
  push:
    branches: ['main']
    tags:
      - '*'  # 匹配所有标签
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🗂 Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9  # v3.5.3
        with:
          submodules: recursive
          lfs: true
          fetch-depth: 1

      - name: 📚 Setup Hugo
        uses: peaceiris/actions-hugo@16361eb4acea8698b220b76c0d4e84e1fd22c61d  # v2.6.0
        with:
          hugo-version: '0.92.2' # need to use this version to build the website
          extended: true
      
      - name: 🔧 Set deployment config
        id: config
        run: |
          # 设置基础URL
          BASE_URL="https://ospo.events/"
          echo "base_url=$BASE_URL" >> $GITHUB_OUTPUT
          
          # 根据是否为标签构建设置不同的配置
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "is_tag_build=true" >> $GITHUB_OUTPUT
            echo "full_url=$BASE_URL$VERSION/" >> $GITHUB_OUTPUT
            echo "publish_dir=public" >> $GITHUB_OUTPUT
          else
            echo "version=latest" >> $GITHUB_OUTPUT
            echo "is_tag_build=false" >> $GITHUB_OUTPUT
            echo "full_url=$BASE_URL" >> $GITHUB_OUTPUT
            echo "publish_dir=public" >> $GITHUB_OUTPUT
          fi
          
          echo "publish_branch=gh-pages" >> $GITHUB_OUTPUT

      - name: 🏗️ Build
        id: build
        run: |
          # 使用配置步骤中的输出变量
          if [[ "${{ steps.config.outputs.is_tag_build }}" == "true" ]]; then
            VERSION="${{ steps.config.outputs.version }}"
            FULL_URL="${{ steps.config.outputs.full_url }}"
            
            echo "Building version: $VERSION with URL: $FULL_URL"
            
            # 直接构建到版本目录
            hugo --baseURL "$FULL_URL" \
              --config config.toml \
              --cleanDestinationDir \
              --minify \
              --environment production \
              --destination "public/$VERSION"
              
            # 创建符号链接，使最新版本也可通过根URL访问（可选）
            if [[ "$VERSION" == $(git tag --sort=-creatordate | head -n 1) ]]; then
              echo "This is the latest tag, creating symbolic links"
              mkdir -p public
              find public/$VERSION -mindepth 1 -maxdepth 1 -exec ln -sf {} public/ \;
            fi
          else
            FULL_URL="${{ steps.config.outputs.full_url }}"
            
            echo "Building latest version with URL: $FULL_URL"
            
            # 构建到根目录
            hugo --baseURL "$FULL_URL" \
              --config config.toml \
              --cleanDestinationDir \
              --minify \
              --environment production \
              --destination "public"
          fi
          
          # 检查构建是否成功
          if [ $? -ne 0 ]; then
            echo "::error::Hugo build failed"
            exit 1
          fi
          
          echo "Build completed successfully"
          # 如果是 main 分支构建，也检查 public 目录
          if [[ "${{ steps.config.outputs.is_tag_build }}" == "false" ]]; then
            if [[ -f "public/.html" ]]; then
              echo "Removing unwanted .html file from root directory"
              rm -f "public/.html"
            fi
          fi
          
          # 如果是标签构建，也检查标签目录
          if [[ "${{ steps.config.outputs.is_tag_build }}" == "true" ]]; then
            VERSION="${{ steps.config.outputs.version }}"
            if [[ -f "public/$VERSION/.html" ]]; then
              echo "Removing unwanted .html file from version directory"
              rm -f "public/$VERSION/.html"
            fi
          fi
  
      - name: 🚀 Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          external_repository: ospocommunity/ospo.github.io
          publish_dir: ${{ steps.config.outputs.publish_dir }}
          publish_branch: ${{ steps.config.outputs.publish_branch }}
          cname: ospo.events
          keep_files: false
          allow_empty_commit: true
          force_orphan: false
          commit_message: "Deploy: ${{ steps.config.outputs.version }} from ${{ github.sha }}"